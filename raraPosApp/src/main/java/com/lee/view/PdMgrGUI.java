/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.lee.view;

import com.lee.pd.model.PdDTO;
import com.lee.pd.model.pdDAO;
import com.lee.statement.model.stateDTO;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author my
 */
public class PdMgrGUI extends javax.swing.JFrame implements ActionListener{
    private String[] colNames={"제품명","단가"};
    private DefaultTableModel model = new DefaultTableModel(colNames,0);
    private pdDAO pdDao;
    /**
     * Creates new form pdMgrGUI
     */
    public PdMgrGUI() {
        initComponents();
        init();
        addEvent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        tfPdname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfPdPrice = new javax.swing.JTextField();
        btRegit = new javax.swing.JButton();
        btEdit = new javax.swing.JButton();
        btDel = new javax.swing.JButton();
        btExit = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "제품명", "단가"
            }
        ));
        jScrollPane1.setViewportView(table);

        jLabel1.setText("상품명");

        jLabel2.setText("단가");

        btRegit.setText("상품등록");

        btEdit.setText("상품변경");

        btDel.setText("상품삭제");

        btExit.setText("종료");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("공지"));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("기존 제품의 이름변경, 신상품 등록,\n상품변경, 상품 삭제 시에는\n고객센터로 연락바랍니다.(기능 수정중)\n\n02-1234-5656 라라포스");
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfPdname, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btRegit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfPdPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(btEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btDel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfPdname, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfPdPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btRegit, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btDel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btExit, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PdMgrGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PdMgrGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PdMgrGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PdMgrGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PdMgrGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDel;
    private javax.swing.JButton btEdit;
    private javax.swing.JButton btExit;
    private javax.swing.JButton btRegit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTable table;
    private javax.swing.JTextField tfPdPrice;
    private javax.swing.JTextField tfPdname;
    // End of variables declaration//GEN-END:variables

    private void init() {
        pdDao=new pdDAO();
        try {
            showPdData();
        } catch (SQLException ex) {
            Logger.getLogger(PdMgrGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void addEvent() {
        btRegit.addActionListener(this);
        btEdit.addActionListener(this);
        btDel.addActionListener(this);
        btExit.addActionListener(this);
        table.addMouseListener(new EventHandler());
    }
    
    class EventHandler extends MouseAdapter{

        @Override
        public void mouseClicked(MouseEvent e) {
            if(e.getSource()==table){
                try {
                    int row=table.getSelectedRow();
                    
                    Object objName=table.getValueAt(row, 0);
                    String pdName=(String)objName;
                    
                    PdDTO dto=pdDao.selectByName(pdName);
                    int pdPrice=dto.getPdprice();
                    
                    tfPdname.setText(pdName);
                    tfPdPrice.setText(Integer.toString(pdPrice));
                } catch (SQLException ex) {
                    Logger.getLogger(PdMgrGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if(e.getSource()==btExit){
            this.dispose();
        }else if(e.getSource()==btRegit){
            String pdName=tfPdname.getText();
            String price=tfPdPrice.getText();

            if(pdName.isEmpty() || pdName==null || price.isEmpty() || price==null){
                JOptionPane.showMessageDialog(this, "등록할 상품명/단가를 먼저 입력해주세요");
            }else{
                int pdPrice = Integer.parseInt(price);
                try {
                    pdDao.register(pdName, pdPrice);
                } catch (SQLException ex) {
                    Logger.getLogger(PdMgrGUI.class.getName()).log(Level.SEVERE, null, ex);
                }

                JOptionPane.showMessageDialog(this, "상품명:"+pdName+", 가격:"+pdPrice+" 제품이 등록되었습니다");
                try {
                    showPdData();
                } catch (SQLException ex) {
                    Logger.getLogger(PdMgrGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }else if(e.getSource()==btEdit){
            String pdName=tfPdname.getText();
            String price=tfPdPrice.getText();

            if(pdName.isEmpty() || pdName==null || price.isEmpty() || price==null){
                JOptionPane.showMessageDialog(this, "변경할 상품명/단가를 먼저 입력해주세요");
            }else{
                int pdPrice = Integer.parseInt(price);
                try {
                    int result = pdDao.edit(pdName, pdPrice);
                    if(result<0){
                        JOptionPane.showMessageDialog(this, "업데이트 실패, 상품명을 확인해주세요");
                        tfPdname.requestFocus();
                        return;
                    }else{
                        JOptionPane.showMessageDialog(this, "업데이트 성공!");
                        showPdData();
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(PdMgrGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }else if(e.getSource()==btDel){
            String pdName=tfPdname.getText();
            
            if(pdName.isEmpty() || pdName==null){
                JOptionPane.showMessageDialog(this, "변경할 상품명/단가를 먼저 입력해주세요");
            }else{
                try {
                    int result = pdDao.deleteData(pdName);
                    if(result<0){
                        JOptionPane.showMessageDialog(this, "삭제할 데이터가 없습니다");
                    }else{
                        JOptionPane.showMessageDialog(this, "상품 삭제 완료!");
                    }
                    showPdData();
                } catch (SQLException ex) {
                    Logger.getLogger(PdMgrGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    private void showPdData() throws SQLException {
        List<PdDTO> list=pdDao.showPdData();
        if(list==null || list.isEmpty()){
            JOptionPane.showMessageDialog(this, "데이터가 없습니다.");
            return;
        }
        String[][] data=new String[list.size()][colNames.length];
        DecimalFormat df = new DecimalFormat("#,###");
        
        for(int i=0;i<list.size();i++){
            PdDTO dto=list.get(i);
            
            data[i][0]=dto.getPdname();
            data[i][1]=df.format(dto.getPdprice());            
        }//for
        
        model.setDataVector(data, colNames);
        table.setModel(model);
        
        //각 컬럼 사이즈 조절
        table.getColumnModel().getColumn(0).setPreferredWidth(100);
        table.getColumnModel().getColumn(1).setPreferredWidth(200);
        
    }
}
