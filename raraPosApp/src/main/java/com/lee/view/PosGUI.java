/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.lee.view;

import com.lee.pd.model.PdDTO;
import com.lee.pd.model.pdDAO;
import com.lee.statement.model.stateDAO;
import com.lee.statement.model.stateDTO;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author my
 */
public class PosGUI extends javax.swing.JFrame implements ActionListener{
    private pdDAO pdDao;
    private stateDAO stateDao;
    /**
     * Creates new form PosGUI
     */
    public PosGUI() {
        initComponents();
        init();
        addEvent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        bt0 = new javax.swing.JButton();
        btC = new javax.swing.JButton();
        btDot = new javax.swing.JButton();
        bt3 = new javax.swing.JButton();
        bt2 = new javax.swing.JButton();
        bt1 = new javax.swing.JButton();
        bt6 = new javax.swing.JButton();
        bt5 = new javax.swing.JButton();
        bt4 = new javax.swing.JButton();
        bt9 = new javax.swing.JButton();
        bt8 = new javax.swing.JButton();
        bt7 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btAme = new javax.swing.JButton();
        btEs = new javax.swing.JButton();
        btLatte = new javax.swing.JButton();
        btVanila = new javax.swing.JButton();
        btHazel = new javax.swing.JButton();
        btMocha = new javax.swing.JButton();
        btChoco = new javax.swing.JButton();
        btGreen = new javax.swing.JButton();
        btMilktea = new javax.swing.JButton();
        btCamo = new javax.swing.JButton();
        btZamong = new javax.swing.JButton();
        btLemon = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfPay = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfTax = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tfTotal = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        cbPay = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        tfGive = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tfTake = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        btPay = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();
        btRemove = new javax.swing.JButton();
        btHome = new javax.swing.JButton();
        btExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        bt0.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        bt0.setText("0");
        bt0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt0ActionPerformed(evt);
            }
        });

        btC.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        btC.setText("c");
        btC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCActionPerformed(evt);
            }
        });

        btDot.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        btDot.setText(".");
        btDot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDotActionPerformed(evt);
            }
        });

        bt3.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        bt3.setText("3");
        bt3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt3ActionPerformed(evt);
            }
        });

        bt2.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        bt2.setText("2");
        bt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt2ActionPerformed(evt);
            }
        });

        bt1.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        bt1.setText("1");
        bt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt1ActionPerformed(evt);
            }
        });

        bt6.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        bt6.setText("6");
        bt6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt6ActionPerformed(evt);
            }
        });

        bt5.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        bt5.setText("5");
        bt5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt5ActionPerformed(evt);
            }
        });

        bt4.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        bt4.setText("4");
        bt4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt4ActionPerformed(evt);
            }
        });

        bt9.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        bt9.setText("9");
        bt9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt9ActionPerformed(evt);
            }
        });

        bt8.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        bt8.setText("8");
        bt8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt8ActionPerformed(evt);
            }
        });

        bt7.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        bt7.setText("7");
        bt7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bt7, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bt8, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bt9, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bt4, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bt5, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bt6, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bt1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bt2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bt3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bt0, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btDot, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btC, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt7, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt8, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt9, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt5, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt6, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt0, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btDot, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btC, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "상품", "수량", "단가"
            }
        ));
        jScrollPane1.setViewportView(table);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        btAme.setText("아메리카노");

        btEs.setText("에스프레소");

        btLatte.setText("카페라떼");

        btVanila.setText("바닐라라떼");

        btHazel.setText("헤즐넛라떼");

        btMocha.setText("카페모카");

        btChoco.setText("초코라떼");

        btGreen.setText("녹차라떼");

        btMilktea.setText("밀크티라떼");

        btCamo.setText("캐모마일");

        btZamong.setText("자몽티");

        btLemon.setText("레몬티");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btEs, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(btAme, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btLatte, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btVanila, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(btChoco, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btHazel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btMocha, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btGreen, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btMilktea, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(btCamo, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(btZamong, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btLemon, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAme, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btLatte, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btEs, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btHazel, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btMocha, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btVanila, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btGreen, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btMilktea, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btChoco, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btZamong, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btLemon, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCamo, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel1.setFont(new java.awt.Font("맑은 고딕", 1, 16)); // NOI18N
        jLabel1.setText("상품금액");

        jLabel2.setFont(new java.awt.Font("맑은 고딕", 1, 16)); // NOI18N
        jLabel2.setText("세금");

        jLabel6.setFont(new java.awt.Font("맑은 고딕", 1, 16)); // NOI18N
        jLabel6.setText("결제금액");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                    .addComponent(tfTax)
                    .addComponent(tfPay))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tfPay, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(tfTax, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel3.setFont(new java.awt.Font("맑은 고딕", 1, 16)); // NOI18N
        jLabel3.setText("결제방법");

        cbPay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "카드", "현금" }));

        jLabel4.setFont(new java.awt.Font("맑은 고딕", 1, 16)); // NOI18N
        jLabel4.setText("받은돈");

        jLabel5.setFont(new java.awt.Font("맑은 고딕", 1, 16)); // NOI18N
        jLabel5.setText("거스름돈");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbPay, 0, 260, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfGive))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfTake)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbPay, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfGive, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfTake, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        btPay.setText("결제");

        btCancel.setText("취소");

        btRemove.setText("초기화");

        btHome.setText("홈");

        btExit.setText("종료");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btPay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(btCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(btRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addComponent(btHome, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btExit, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btPay, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btExit, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bt0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bt0ActionPerformed

    private void btCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btCActionPerformed

    private void btDotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDotActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btDotActionPerformed

    private void bt3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bt3ActionPerformed

    private void bt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bt2ActionPerformed

    private void bt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bt1ActionPerformed

    private void bt6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bt6ActionPerformed

    private void bt5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bt5ActionPerformed

    private void bt4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bt4ActionPerformed

    private void bt9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bt9ActionPerformed

    private void bt8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bt8ActionPerformed

    private void bt7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bt7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PosGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt0;
    private javax.swing.JButton bt1;
    private javax.swing.JButton bt2;
    private javax.swing.JButton bt3;
    private javax.swing.JButton bt4;
    private javax.swing.JButton bt5;
    private javax.swing.JButton bt6;
    private javax.swing.JButton bt7;
    private javax.swing.JButton bt8;
    private javax.swing.JButton bt9;
    private javax.swing.JButton btAme;
    private javax.swing.JButton btC;
    private javax.swing.JButton btCamo;
    private javax.swing.JButton btCancel;
    private javax.swing.JButton btChoco;
    private javax.swing.JButton btDot;
    private javax.swing.JButton btEs;
    private javax.swing.JButton btExit;
    private javax.swing.JButton btGreen;
    private javax.swing.JButton btHazel;
    private javax.swing.JButton btHome;
    private javax.swing.JButton btLatte;
    private javax.swing.JButton btLemon;
    private javax.swing.JButton btMilktea;
    private javax.swing.JButton btMocha;
    private javax.swing.JButton btPay;
    private javax.swing.JButton btRemove;
    private javax.swing.JButton btVanila;
    private javax.swing.JButton btZamong;
    private javax.swing.JComboBox<String> cbPay;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JTextField tfGive;
    private javax.swing.JTextField tfPay;
    private javax.swing.JTextField tfTake;
    private javax.swing.JTextField tfTax;
    private javax.swing.JTextField tfTotal;
    // End of variables declaration//GEN-END:variables

    private void init() {
        pdDao=new pdDAO();
        stateDao=new stateDAO();
    }

    private void addEvent() {
        bt0.addActionListener(this);
        bt1.addActionListener(this);
        bt2.addActionListener(this);
        bt3.addActionListener(this);
        bt4.addActionListener(this);
        bt5.addActionListener(this);
        bt6.addActionListener(this);
        bt7.addActionListener(this);
        bt8.addActionListener(this);
        bt9.addActionListener(this);
        btC.addActionListener(this);
        btDot.addActionListener(this);
        btAme.addActionListener(this);
        btEs.addActionListener(this);
        btLatte.addActionListener(this);
        btVanila.addActionListener(this);
        btHazel.addActionListener(this);
        btMocha.addActionListener(this);
        btChoco.addActionListener(this);
        btGreen.addActionListener(this);
        btMilktea.addActionListener(this);
        btCamo.addActionListener(this);
        btZamong.addActionListener(this);
        btLemon.addActionListener(this);
        btPay.addActionListener(this);
        btCancel.addActionListener(this);
        btRemove.addActionListener(this);
        btHome.addActionListener(this);
        btExit.addActionListener(this);
    }
    
    public void actionPerformed(ActionEvent e) {
        if(e.getSource()==bt0){
            String Enternumber = tfGive.getText();
            
            if(Enternumber==""){
                tfGive.setText(bt0.getText());
            }else{
                Enternumber = tfGive.getText() + bt0.getText();
                tfGive.setText(Enternumber);
            }
        }else if(e.getSource()==bt1){
            String Enternumber = tfGive.getText();
            
            if(Enternumber==""){
                tfGive.setText(bt1.getText());
            }else{
                Enternumber = tfGive.getText() + bt1.getText();
                tfGive.setText(Enternumber);
            }
        }else if(e.getSource()==bt2){
            String Enternumber = tfGive.getText();
            
            if(Enternumber==""){
                tfGive.setText(bt2.getText());
            }else{
                Enternumber = tfGive.getText() + bt2.getText();
                tfGive.setText(Enternumber);
            }
        }else if(e.getSource()==bt3){
            String Enternumber = tfGive.getText();
            
            if(Enternumber==""){
                tfGive.setText(bt3.getText());
            }else{
                Enternumber = tfGive.getText() + bt3.getText();
                tfGive.setText(Enternumber);
            }
        }else if(e.getSource()==bt4){
            String Enternumber = tfGive.getText();
            
            if(Enternumber==""){
                tfGive.setText(bt4.getText());
            }else{
                Enternumber = tfGive.getText() + bt4.getText();
                tfGive.setText(Enternumber);
            }
        }else if(e.getSource()==bt5){
            String Enternumber = tfGive.getText();
            
            if(Enternumber==""){
                tfGive.setText(bt5.getText());
            }else{
                Enternumber = tfGive.getText() + bt5.getText();
                tfGive.setText(Enternumber);
            }
        }else if(e.getSource()==bt6){
            String Enternumber = tfGive.getText();
            
            if(Enternumber==""){
                tfGive.setText(bt6.getText());
            }else{
                Enternumber = tfGive.getText() + bt6.getText();
                tfGive.setText(Enternumber);
            }
        }else if(e.getSource()==bt7){
            String Enternumber = tfGive.getText();
            
            if(Enternumber==""){
                tfGive.setText(bt7.getText());
            }else{
                Enternumber = tfGive.getText() + bt7.getText();
                tfGive.setText(Enternumber);
            }
        }else if(e.getSource()==bt8){
            String Enternumber = tfGive.getText();
            
            if(Enternumber==""){
                tfGive.setText(bt8.getText());
            }else{
                Enternumber = tfGive.getText() + bt8.getText();
                tfGive.setText(Enternumber);
            }
        }else if(e.getSource()==bt9){
            String Enternumber = tfGive.getText();
            
            if(Enternumber==""){
                tfGive.setText(bt9.getText());
            }else{
                Enternumber = tfGive.getText() + bt9.getText();
                tfGive.setText(Enternumber);
            }
        }else if(e.getSource()==btC){
            tfGive.setText("");
            tfTake.setText("");
        }else if(e.getSource()==btDot){
            if(!tfGive.getText().contains(".")){//.포함된 수가 아니라면 .입력가능하게!
                tfGive.setText(tfGive.getText()+btDot.getText());
            }
        }else if(e.getSource()==btAme){
            try {
                PdDTO dto=new PdDTO();
                dto=pdDao.selectPdName(btAme.getText());
                
                String pdname=dto.getPdname();
                int qty=dto.getPdqty();
                int price=dto.getPdprice();
                int total=qty*price;
                
                DefaultTableModel model=(DefaultTableModel)table.getModel();
                model.addRow(new Object[] {pdname,qty,price,total});
                ItemCost();
            } catch (SQLException ex) {
                Logger.getLogger(PosGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(e.getSource()==btEs){
            try {
                PdDTO dto=new PdDTO();
                dto=pdDao.selectPdName(btEs.getText());
                
                String pdname=dto.getPdname();
                int qty=dto.getPdqty();
                int price=dto.getPdprice();
                int total=qty*price;
                
                DefaultTableModel model=(DefaultTableModel)table.getModel();
                model.addRow(new Object[] {pdname,qty,price,total});
                ItemCost();
            } catch (SQLException ex) {
                Logger.getLogger(PosGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(e.getSource()==btLatte){
            try {
                PdDTO dto=new PdDTO();
                dto=pdDao.selectPdName(btLatte.getText());
                
                String pdname=dto.getPdname();
                int qty=dto.getPdqty();
                int price=dto.getPdprice();
                int total=qty*price;
                
                DefaultTableModel model=(DefaultTableModel)table.getModel();
                model.addRow(new Object[] {pdname,qty,price,total});
                ItemCost();
            } catch (SQLException ex) {
                Logger.getLogger(PosGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(e.getSource()==btVanila){
            try {
                PdDTO dto=new PdDTO();
                dto=pdDao.selectPdName(btVanila.getText());
                
                String pdname=dto.getPdname();
                int qty=dto.getPdqty();
                int price=dto.getPdprice();
                int total=qty*price;
                
                DefaultTableModel model=(DefaultTableModel)table.getModel();
                model.addRow(new Object[] {pdname,qty,price,total});
                ItemCost();
            } catch (SQLException ex) {
                Logger.getLogger(PosGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(e.getSource()==btHazel){
            try {
                PdDTO dto=new PdDTO();
                dto=pdDao.selectPdName(btHazel.getText());
                
                String pdname=dto.getPdname();
                int qty=dto.getPdqty();
                int price=dto.getPdprice();
                int total=qty*price;
                
                DefaultTableModel model=(DefaultTableModel)table.getModel();
                model.addRow(new Object[] {pdname,qty,price,total});
                ItemCost();
            } catch (SQLException ex) {
                Logger.getLogger(PosGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(e.getSource()==btMocha){
            try {
                PdDTO dto=new PdDTO();
                dto=pdDao.selectPdName(btMocha.getText());
                
                String pdname=dto.getPdname();
                int qty=dto.getPdqty();
                int price=dto.getPdprice();
                int total=qty*price;
                
                DefaultTableModel model=(DefaultTableModel)table.getModel();
                model.addRow(new Object[] {pdname,qty,price,total});
                ItemCost();
            } catch (SQLException ex) {
                Logger.getLogger(PosGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(e.getSource()==btChoco){
            try {
                PdDTO dto=new PdDTO();
                dto=pdDao.selectPdName(btChoco.getText());
                
                String pdname=dto.getPdname();
                int qty=dto.getPdqty();
                int price=dto.getPdprice();
                int total=qty*price;
                
                DefaultTableModel model=(DefaultTableModel)table.getModel();
                model.addRow(new Object[] {pdname,qty,price,total});
                ItemCost();
            } catch (SQLException ex) {
                Logger.getLogger(PosGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(e.getSource()==btGreen){
            try {
                PdDTO dto=new PdDTO();
                dto=pdDao.selectPdName(btGreen.getText());
                
                String pdname=dto.getPdname();
                int qty=dto.getPdqty();
                int price=dto.getPdprice();
                int total=qty*price;
                
                DefaultTableModel model=(DefaultTableModel)table.getModel();
                model.addRow(new Object[] {pdname,qty,price,total});
                ItemCost();
            } catch (SQLException ex) {
                Logger.getLogger(PosGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(e.getSource()==btMilktea){
            try {
                PdDTO dto=new PdDTO();
                dto=pdDao.selectPdName(btMilktea.getText());
                
                String pdname=dto.getPdname();
                int qty=dto.getPdqty();
                int price=dto.getPdprice();
                int total=qty*price;
                
                DefaultTableModel model=(DefaultTableModel)table.getModel();
                model.addRow(new Object[] {pdname,qty,price,total});
                ItemCost();
            } catch (SQLException ex) {
                Logger.getLogger(PosGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(e.getSource()==btCamo){
            try {
                PdDTO dto=new PdDTO();
                dto=pdDao.selectPdName(btCamo.getText());
                
                String pdname=dto.getPdname();
                int qty=dto.getPdqty();
                int price=dto.getPdprice();
                int total=qty*price;
                
                DefaultTableModel model=(DefaultTableModel)table.getModel();
                model.addRow(new Object[] {pdname,qty,price,total});
                ItemCost();
            } catch (SQLException ex) {
                Logger.getLogger(PosGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(e.getSource()==btZamong){
            try {
                PdDTO dto=new PdDTO();
                dto=pdDao.selectPdName(btZamong.getText());
                
                String pdname=dto.getPdname();
                int qty=dto.getPdqty();
                int price=dto.getPdprice();
                int total=qty*price;
                
                DefaultTableModel model=(DefaultTableModel)table.getModel();
                model.addRow(new Object[] {pdname,qty,price,total});
                ItemCost();
            } catch (SQLException ex) {
                Logger.getLogger(PosGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(e.getSource()==btLemon){
            try {
                PdDTO dto=new PdDTO();
                dto=pdDao.selectPdName(btLemon.getText());
                
                String pdname=dto.getPdname();
                int qty=dto.getPdqty();
                int price=dto.getPdprice();
                int total=qty*price;
                
                DefaultTableModel model=(DefaultTableModel)table.getModel();
                model.addRow(new Object[] {pdname,qty,price,total});
                ItemCost();
            } catch (SQLException ex) {
                Logger.getLogger(PosGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(e.getSource()==btPay){
            if(cbPay.getSelectedItem().equals("현금")){
                if(tfGive.getText().length()<1){
                    JOptionPane.showMessageDialog(this, "받으신 금액을 입력해주세요");
                    tfGive.requestFocus();
                    return;
                }
                Change();
            }else if(cbPay.getSelectedItem().equals("카드")){
               if(tfGive.getText().length()<1){
                    JOptionPane.showMessageDialog(this, "받으신 금액을 입력해주세요");
                    tfGive.requestFocus();
                    return;
                }
                Change();
            }
            
            if(Double.parseDouble(tfTake.getText())<0){
            JOptionPane.showMessageDialog(this, "받으신 금액이 적습니다, 금액을 더 요구하세요");
            tfTake.requestFocus();
            return;
            }else if(Double.parseDouble(tfTake.getText())>=0){
                try {
                    // DB 저장을 위한 코드
                    int count = -1;
                    for (int i = 0; i < table.getRowCount(); i++){
//                     table.getValueAt(i,2).toString();
                    count++;
                    }
                    
                    String item = table.getValueAt(0,0).toString() + " 외 " + count + "개";
                    String method = cbPay.getSelectedItem().toString();
                    double giveMoney = Double.parseDouble(tfGive.getText());
                    double takeMoney = Double.parseDouble(tfTake.getText());
                    double revenue = giveMoney-takeMoney;
                    
                    DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
                    Date date = new Date();
                    String regdate = dateFormat.format(date);
                    
                    stateDTO dto=new stateDTO();
                    dto.setItem(item);
                    dto.setCount(Integer.toString(count+1));
                    dto.setMethod(method);
                    dto.setGiveMoney(giveMoney);
                    dto.setTakeMoney(takeMoney);
                    dto.setRevenue(revenue);
                    dto.setRegdate(regdate);
                    
                    int result = stateDao.save(dto);
                    
                    if(result>0) {
                        JOptionPane.showMessageDialog(this, "DB 추가 성공");
                    }else if(result<=0){
                        JOptionPane.showMessageDialog(this, "DB 추가 실패");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(PosGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setNumRows(0);
            tfPay.setText("");
            tfTax.setText("");
            tfTotal.setText("");
            tfGive.setText("");
            tfTake.setText("");
        }else if(e.getSource()==btCancel){
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            
            int removeRow=table.getSelectedRow();
            if(removeRow>=0){
                model.removeRow(removeRow);
            }
            
            ItemCost();
        }else if(e.getSource()==btRemove){
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            tfPay.setText("");
            tfTax.setText("");
            tfTotal.setText("");
        }else if(e.getSource()==btHome){
            PostGUI f = new PostGUI();
            f.setVisible(true);
            this.dispose();
        }else if(e.getSource()==btExit){
            System.exit(0);
        }
    }
    //======================순수익 계산 함수====================================
    public void ItemCost(){
        double sum=0;
        double tax=0;
        
        for(int i=0;i<table.getRowCount();i++){
            sum=sum+(Double.parseDouble(table.getValueAt(i, 2).toString()))*0.9;
            tax=tax+(Double.parseDouble(table.getValueAt(i, 2).toString()))*0.1;
        }
        tfPay.setText(Double.toString(sum));
        tfTax.setText(Double.toString(tax));
        double cSum=Double.parseDouble(tfPay.getText());
        double cTax=Double.parseDouble(tfTax.getText());
        
        String revenue=Double.toString(cSum+cTax);
        tfTotal.setText(revenue);
    }
    
    //======================거스름돈 계산 함수==================================
    public void Change(){
        double sum=0;
        double tax=0;
        double cash=Double.parseDouble(tfGive.getText());
        
        for(int i=0;i<table.getRowCount();i++){
            sum=sum+(Double.parseDouble(table.getValueAt(i, 2).toString()))*0.9;
            tax=tax+(Double.parseDouble(table.getValueAt(i, 2).toString()))*0.1;
        }
       double dChange=(cash-(sum+tax));
       String change=Double.toString(dChange);
       tfTake.setText(change);
       
       
    }
}
