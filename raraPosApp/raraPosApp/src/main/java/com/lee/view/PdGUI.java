/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.lee.view;

import com.lee.pd.model.pdDAO;
import com.lee.statement.model.stateDAO;
import com.lee.statement.model.stateDTO;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author my
 */
public class PdGUI extends javax.swing.JFrame implements ActionListener{
    private String[] colNames={"주문번호","주문목록","주문갯수","결제방식","받은금액","거스름돈","수익","결제일"};
    private stateDAO stateDao;
    private DefaultTableModel model = new DefaultTableModel(colNames,0);
    /**
     * Creates new form PdGUI
     */
    public PdGUI() {
        initComponents();
        stateDao=new stateDAO();
        init();
        addEvent();
        
        try {
            showAllData();
        } catch (SQLException ex) {
            Logger.getLogger(PdGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            showAllTotal();
        } catch (SQLException ex) {
            Logger.getLogger(PdGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfRegdate = new javax.swing.JTextField();
        btSearchDate = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfOrderNo = new javax.swing.JTextField();
        cbMethod = new javax.swing.JComboBox<>();
        btSearchOrdNo = new javax.swing.JButton();
        btSearchMethod = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tfTotalGive = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfTotalTake = new javax.swing.JTextField();
        tfTotal = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btHome = new javax.swing.JButton();
        btExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "주문번호", "주문목록", "주문갯수", "결제방식", "받은금액", "거스름돈", "수익", "결제일"
            }
        ));
        jScrollPane1.setViewportView(table);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel1.setText("결제일조회");

        tfRegdate.setText("ex)2022/01/01");

        btSearchDate.setText("조회");

        jLabel5.setText("주문번호조회");

        jLabel6.setText("결제방식");

        cbMethod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "현금", "카드" }));

        btSearchOrdNo.setText("조회");

        btSearchMethod.setText("조회");

        jLabel2.setText("총 받은금액");

        jLabel3.setText("총 거스름돈");

        jLabel4.setText("총 수익");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(tfRegdate, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSearchDate))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cbMethod, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btSearchMethod))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tfOrderNo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btSearchOrdNo)))))
                .addGap(130, 130, 130)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(tfTotal))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(tfTotalGive, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(tfTotalTake)))
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfTotalGive, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfRegdate, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btSearchDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfTotalTake, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfOrderNo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btSearchOrdNo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(cbMethod)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btSearchMethod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(8, 8, 8))
        );

        btHome.setText("HOME");

        btExit.setText("종료");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btHome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btExit))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 12, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btExit, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PdGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PdGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PdGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PdGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PdGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btExit;
    private javax.swing.JButton btHome;
    private javax.swing.JButton btSearchDate;
    private javax.swing.JButton btSearchMethod;
    private javax.swing.JButton btSearchOrdNo;
    private javax.swing.JComboBox<String> cbMethod;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JTextField tfOrderNo;
    private javax.swing.JTextField tfRegdate;
    private javax.swing.JTextField tfTotal;
    private javax.swing.JTextField tfTotalGive;
    private javax.swing.JTextField tfTotalTake;
    // End of variables declaration//GEN-END:variables

    private void init() {
        tfTotalGive.setEditable(false);
        tfTotalTake.setEditable(false);
        tfTotal.setEditable(false);
    }

    private void addEvent() {
        btHome.addActionListener(this);
        btExit.addActionListener(this);
        btSearchDate.addActionListener(this);
        btSearchOrdNo.addActionListener(this);
        btSearchMethod.addActionListener(this);
        tfRegdate.addMouseListener(new EventHandler());
    }

    class EventHandler extends MouseAdapter{

        @Override
        public void mouseClicked(MouseEvent e) {
            if(e.getSource()==tfRegdate){
                tfRegdate.setText("");
            }
        }
        
    }
    
    private void showAllTotal() throws SQLException {
        DecimalFormat df = new DecimalFormat("#,###");
        int totalGive=0;
        int totalTake=0;
        int total=0;
        List<stateDTO> list=stateDao.showAllData();
        for(int i=0;i<list.size();i++){
            stateDTO dto=list.get(i);
            
            totalGive += dto.getGiveMoney();
            totalTake += dto.getTakeMoney();
            total += dto.getRevenue();
        }
        tfTotalGive.setText(df.format(totalGive));
        tfTotalTake.setText(df.format(totalTake));
        tfTotal.setText(df.format(total));
        
    }
    private void showAllData() throws SQLException {
        List<stateDTO> list=stateDao.showAllData();
        if(list==null || list.isEmpty()){
            JOptionPane.showMessageDialog(this, "데이터가 없습니다.");
            return;
        }
        String[][] data=new String[list.size()][colNames.length];
        DecimalFormat df = new DecimalFormat("#,###");
        
        for(int i=0;i<list.size();i++){
            stateDTO dto=list.get(i);
            
            data[i][0]=dto.getOrdno()+"";
            data[i][1]=dto.getItem();
            data[i][2]=dto.getCount();            
            data[i][3]=dto.getMethod();            
            data[i][4]=df.format(dto.getGiveMoney());            
            data[i][5]=df.format(dto.getTakeMoney());            
            data[i][6]=df.format(dto.getRevenue());            
            data[i][7]=dto.getRegdate();
        }//for
        
        model.setDataVector(data, colNames);
        table.setModel(model);
        
        //각 컬럼 사이즈 조절
        table.getColumnModel().getColumn(0).setPreferredWidth(100);
        table.getColumnModel().getColumn(1).setPreferredWidth(200);
        table.getColumnModel().getColumn(2).setPreferredWidth(100);
        table.getColumnModel().getColumn(3).setPreferredWidth(100);
        table.getColumnModel().getColumn(4).setPreferredWidth(100);
        table.getColumnModel().getColumn(5).setPreferredWidth(100);
        table.getColumnModel().getColumn(6).setPreferredWidth(100);
        table.getColumnModel().getColumn(7).setPreferredWidth(150);
        
        
        
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if(e.getSource()==btSearchDate){
            try {
                searchDate();
            } catch (SQLException ex) {
                Logger.getLogger(PdGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(e.getSource()==btSearchOrdNo){
            try {
                searchOrderNo();
            } catch (SQLException ex) {
                Logger.getLogger(PdGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(e.getSource()==btSearchMethod){
            try {
                searchMethod();
            } catch (SQLException ex) {
                Logger.getLogger(PdGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(e.getSource()==btHome){
            PostGUI f=new PostGUI();
            f.setVisible(true);
            this.dispose();
        }else if(e.getSource()==btExit){
            System.exit(0);
        }
    }

    private void searchDate() throws SQLException {
        tfOrderNo.setText("");
        String regdate=tfRegdate.getText();
        if(regdate==null || regdate.isEmpty()){
            JOptionPane.showMessageDialog(this, "날짜를 입력해주세요");
            tfRegdate.requestFocus();
            return;
        }
        List<stateDTO> list = stateDao.SelectDate(regdate);
        
        if(list.size()==0){
            JOptionPane.showMessageDialog(this, "조회할 정보가 없습니다");
            tfRegdate.requestFocus();
            return;
        }
        
        String[][] data=new String[list.size()][colNames.length];
        DecimalFormat df = new DecimalFormat("#,###");
        
        for(int i=0;i<list.size();i++){
            stateDTO dto=list.get(i);
            
            data[i][0]=dto.getOrdno()+"";
            data[i][1]=dto.getItem();
            data[i][2]=dto.getCount();            
            data[i][3]=dto.getMethod();            
            data[i][4]=df.format(dto.getGiveMoney());            
            data[i][5]=df.format(dto.getTakeMoney());            
            data[i][6]=df.format(dto.getRevenue());            
            data[i][7]=dto.getRegdate();
            
        }//for
        
        model.setDataVector(data, colNames);
        table.setModel(model);
        
        //각 컬럼 사이즈 조절
        table.getColumnModel().getColumn(0).setPreferredWidth(100);
        table.getColumnModel().getColumn(1).setPreferredWidth(200);
        table.getColumnModel().getColumn(2).setPreferredWidth(100);
        table.getColumnModel().getColumn(3).setPreferredWidth(100);
        table.getColumnModel().getColumn(4).setPreferredWidth(100);
        table.getColumnModel().getColumn(5).setPreferredWidth(100);
        table.getColumnModel().getColumn(6).setPreferredWidth(100);
        table.getColumnModel().getColumn(7).setPreferredWidth(150);
        
    }

    private void searchOrderNo() throws SQLException {
        tfRegdate.setText("");
        int orderNo=Integer.parseInt(tfOrderNo.getText());
        if(orderNo==0){
            JOptionPane.showMessageDialog(this, "주문번호를 입력해주세요");
            tfOrderNo.requestFocus();
            return;
        }
        List<stateDTO> list = stateDao.SelectNo(orderNo);
        
        if(list.size()==0){
            JOptionPane.showMessageDialog(this, "조회할 정보가 없습니다");
            tfRegdate.requestFocus();
            return;
        }
        
        String[][] data=new String[list.size()][colNames.length];
        DecimalFormat df = new DecimalFormat("#,###");
        
        for(int i=0;i<list.size();i++){
            stateDTO dto=list.get(i);
            
            data[i][0]=dto.getOrdno()+"";
            data[i][1]=dto.getItem();
            data[i][2]=dto.getCount();            
            data[i][3]=dto.getMethod();            
            data[i][4]=df.format(dto.getGiveMoney());            
            data[i][5]=df.format(dto.getTakeMoney());            
            data[i][6]=df.format(dto.getRevenue());            
            data[i][7]=dto.getRegdate();
        }//for
        
        model.setDataVector(data, colNames);
        table.setModel(model);
        
        //각 컬럼 사이즈 조절
        table.getColumnModel().getColumn(0).setPreferredWidth(100);
        table.getColumnModel().getColumn(1).setPreferredWidth(200);
        table.getColumnModel().getColumn(2).setPreferredWidth(100);
        table.getColumnModel().getColumn(3).setPreferredWidth(100);
        table.getColumnModel().getColumn(4).setPreferredWidth(100);
        table.getColumnModel().getColumn(5).setPreferredWidth(100);
        table.getColumnModel().getColumn(6).setPreferredWidth(100);
        table.getColumnModel().getColumn(7).setPreferredWidth(150);
        
    }

    private void searchMethod() throws SQLException {
        tfRegdate.setText("");
        tfOrderNo.setText("");
        String method=cbMethod.getSelectedItem().toString();
        
        List<stateDTO> list = stateDao.SelectMethod(method);
        
        if(list.size()==0){
            JOptionPane.showMessageDialog(this, "조회할 정보가 없습니다");
            return;
        }
        
        String[][] data=new String[list.size()][colNames.length];
        DecimalFormat df = new DecimalFormat("#,###");
        
        for(int i=0;i<list.size();i++){
            stateDTO dto=list.get(i);
            
            data[i][0]=dto.getOrdno()+"";
            data[i][1]=dto.getItem();
            data[i][2]=dto.getCount();            
            data[i][3]=dto.getMethod();            
            data[i][4]=df.format(dto.getGiveMoney());            
            data[i][5]=df.format(dto.getTakeMoney());            
            data[i][6]=df.format(dto.getRevenue());            
            data[i][7]=dto.getRegdate();
        }//for
        
        model.setDataVector(data, colNames);
        table.setModel(model);
        
        //각 컬럼 사이즈 조절
        table.getColumnModel().getColumn(0).setPreferredWidth(100);
        table.getColumnModel().getColumn(1).setPreferredWidth(200);
        table.getColumnModel().getColumn(2).setPreferredWidth(100);
        table.getColumnModel().getColumn(3).setPreferredWidth(100);
        table.getColumnModel().getColumn(4).setPreferredWidth(100);
        table.getColumnModel().getColumn(5).setPreferredWidth(100);
        table.getColumnModel().getColumn(6).setPreferredWidth(100);
        table.getColumnModel().getColumn(7).setPreferredWidth(150);
        
    }

    

        
        
}
